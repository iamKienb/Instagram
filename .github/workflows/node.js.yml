# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:

  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: User Service
      working-directory: ./users_service
      run: |
        npm ci
        npm test
        touch .env
        echo "${{secrets.PROD_ENV_FILE_USERS}}" > .env

    - name: Chat Service
      working-directory: ./chat_service
      run: |
        npm ci
        npm test
        touch .env
        echo "${{secrets.PROD_ENV_FILE_CHAT}}" > .env

    - name:  Feeds Service
      working-directory: ./feeds_service
      run: |
        npm ci
        npm test
        touch .env
        echo "${{secrets.PROD_ENV_FILE_FEEDS}}" > .env

    - name:  Follow Service
      working-directory: ./follow_service
      run: |
        npm ci
        npm test
        touch .env
        echo "${{secrets.PROD_ENV_FILE_FOLLOW}}" > .env

    - name: Stories Service
      working-directory: ./stories_service
      run: |
        npm ci
        npm test
        touch .env
        echo "${{secrets.PROD_ENV_FILE_STORIES}}" > .env
    - name: Build and run Docker Compose
      run: |
        docker-compose up --build -d
      env:
        PROD_ENV_FILE_USERS: ${{ secrets.PROD_ENV_FILE_USERS }}
        PROD_ENV_FILE_CHAT: ${{ secrets.PROD_ENV_FILE_CHAT }}
        PROD_ENV_FILE_FEEDS: ${{ secrets.PROD_ENV_FILE_FEEDS }}
        PROD_ENV_FILE_FOLLOW: ${{ secrets.PROD_ENV_FILE_FOLLOW }}
        PROD_ENV_FILE_STORIES: ${{ secrets.PROD_ENV_FILE_STORIES }}
